plot(x,y,type="l",lwd=2,col="red")
# if(abs(z)<abs(z_crit)){ #Hipotesis se acepta
#
# }else{
#
# }
# x=seq()
}
v_z <-hipotesis_test(muestra,datosHipotesis,0.05)
graph_hipothesis(v_z[1],v_z[2])
graph_hipothesis <- function(z,z_crit){
xlim <-round(qnorm(99.9/2),1)
print(xlim)
x=seq(-3.2,3.2,length=200)
y=dnorm(x,mean=0,sd=1)
plot(x,y,type="l",lwd=2,col="red")
# if(abs(z)<abs(z_crit)){ #Hipotesis se acepta
#
# }else{
#
# }
# x=seq()
}
v_z <-hipotesis_test(muestra,datosHipotesis,0.05)
graph_hipothesis(v_z[1],v_z[2])
graph_hipothesis <- function(z,z_crit){
xlim <-qnorm(0.999/2)
x=seq(-xlim,xlim,length=200)
y=dnorm(x,mean=0,sd=1)
plot(x,y,type="l",lwd=2,col="red")
# if(abs(z)<abs(z_crit)){ #Hipotesis se acepta
#
# }else{
#
# }
# x=seq()
}
v_z <-hipotesis_test(muestra,datosHipotesis,0.05)
graph_hipothesis(v_z[1],v_z[2])
xlim <-qnorm(0.999/2)
print(xlim)
xlim <-qnorm((1-0.999)/2)
print(xlim)
graph_hipothesis <- function(z,z_crit){
xlim <-qnorm((1-0.999)/2)
print(xlim)
x=seq(-xlim,xlim,length=200)
y=dnorm(x,mean=0,sd=1)
plot(x,y,type="l",lwd=2,col="red")
# if(abs(z)<abs(z_crit)){ #Hipotesis se acepta
#
# }else{
#
# }
# x=seq()
}
v_z <-hipotesis_test(muestra,datosHipotesis,0.05)
graph_hipothesis(v_z[1],v_z[2])
verificar_hipotesis_z <- function(z, z_crit, alpha = 0.05) {
decision <- if (abs(z) > z_crit) "rechazada" else "no rechazada"
cat("Estadístico z:", round(z, 3), "\n")
cat("Valor crítico z:", round(z_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
# Graficar sólo si se rechaza
if (decision == "rechazada") {
x_vals <- seq(-4, 4, length.out = 1000)
y_vals <- dnorm(x_vals)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = "Distribución Normal Estándar",
ylab = "Densidad", xlab = "z")
abline(v = c(-z_crit, z_crit), col = "blue", lty = 2)
abline(v = z, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (z > 0) x_vals >= z_crit else x_vals <= -z_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright", legend = c("Z observado", "Z crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
}
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
verificar_hipotesis_z <- function(z, z_crit, alpha = 0.05) {
decision <- if (abs(z) > z_crit) "rechazada" else "no rechazada"
cat("Estadístico z:", round(z, 3), "\n")
cat("Valor crítico z:", round(z_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
# Graficar sólo si se rechaza
if (decision == "rechazada") {
x_vals <- seq(-4, 4, length.out = 1000)
y_vals <- dnorm(x_vals)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = "Distribución Normal Estándar",
ylab = "Densidad", xlab = "z")
abline(v = c(-z_crit, z_crit), col = "blue", lty = 2)
abline(v = z, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (z > 0) x_vals >= z_crit else x_vals <= -z_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright", legend = c("Z observado", "Z crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
}
v_z <- hipotesis_test(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
verificar_hipotesis_z <- function(z, z_crit, alpha = 0.05) {
verificar_hipotesis_z <- function(z, z_crit, alpha = 0.05) {
decision <- if (abs(z) > abs(z_crit)) "rechazada" else "no rechazada"
cat("Estadístico z:", round(z, 3), "\n")
cat("Valor crítico z:", round(z_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
# Graficar sólo si se rechaza
if (decision == "rechazada") {
xlim <- qnorm(0.001)
x_vals <- seq(-xlim, xlim, length.out = 1000)
y_vals <- dnorm(x_vals)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = "Distribución Normal Estándar",
ylab = "Densidad", xlab = "z")
abline(v = c(-z_crit, z_crit), col = "blue", lty = 2)
abline(v = z, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (z > 0) x_vals >= z_crit else x_vals <= -z_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright", legend = c("Z observado", "Z crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
}
v_z <- hipotesis_test(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
verificar_hipotesis_z <- function(z, z_crit, alpha = 0.05) {
decision <- if (abs(z) > abs(z_crit)) "rechazada" else "no rechazada"
cat("Estadístico z:", round(z, 3), "\n")
cat("Valor crítico z:", round(z_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
# Graficar sólo si se rechaza
if (decision == "rechazada") {
xlim <- qnorm(0.001)
x_vals <- seq(-xlim, xlim, length.out = 1000)
y_vals <- dnorm(x_vals)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = "Distribución Normal Estándar",
ylab = "Densidad", xlab = "z")
abline(v = c(-z_crit, z_crit), col = "blue", lty = 2)
abline(v = z, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (z > 0) x_vals >= z_crit else x_vals <= -z_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright", legend = c("Z observado", "Z crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
}
v_z <- hipotesis_test(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
verificar_hipotesis_z(v_z[1],v_z[2])
cat("Estadístico z:", round(z, 3), "\n")
cat("Valor crítico z:", round(z_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
# Graficar sólo si se rechaza
if (decision == "rechazada") {
xlim <- qnorm(0.001)
x_vals <- seq(-xlim, xlim, length.out = 1000)
y_vals <- dnorm(x_vals)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = "Distribución Normal Estándar",
ylab = "Densidad", xlab = "z")
abline(v = c(-z_crit, z_crit), col = "blue", lty = 2)
abline(v = z, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (z > 0) x_vals >= z_crit else x_vals <= -z_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright", legend = c("Z observado", "Z crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
verificar_hipotesis_z <- function(z, z_crit, alpha = 0.05) {
decision <- if (abs(z) > abs(z_crit)) "rechazada" else "no rechazada"
cat("Estadístico z:", round(z, 3), "\n")
cat("Valor crítico z:", round(z_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
# Graficar sólo si se rechaza
if (decision == "rechazada") {
xlim <- qnorm(0.001)
x_vals <- seq(-xlim, xlim, length.out = 1000)
y_vals <- dnorm(x_vals)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = "Distribución Normal Estándar",
ylab = "Densidad", xlab = "z")
abline(v = c(-z_crit, z_crit), col = "blue", lty = 2)
abline(v = z, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (z > 0) x_vals >= z_crit else x_vals <= -z_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright", legend = c("Z observado", "Z crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
}
v_z <- hipotesis_test(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
print("Hola")
exit()
verificar_hipotesis_z <- function(z, z_crit, alpha = 0.05) {
decision <- if (abs(z) > abs(z_crit)) "rechazada" else "no rechazada"
cat("Estadístico z:", round(z, 3), "\n")
cat("Valor crítico z:", round(z_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
# Graficar sólo si se rechaza
if (decision == "rechazada") {
xlim <- qnorm(0.001)
x_vals <- seq(-xlim, xlim, length.out = 1000)
y_vals <- dnorm(x_vals)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = "Distribución Normal Estándar",
ylab = "Densidad", xlab = "z")
abline(v = c(-z_crit, z_crit), col = "blue", lty = 2)
abline(v = z, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (z > 0) x_vals >= z_crit else x_vals <= -z_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright", legend = c("Z observado", "Z crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
}
v_z <- hipotesis_test(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
verificar_hipotesis_z(v_z[1],v_z[2])
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
polygon(c(100000000,x_vals,1000000),c(0,y_vals,0),col="green",border=NA,density=50)
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
polygon(c(-0.2:0.2),c(0.1:0.1),col="green",border=NA,density=50)
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
verificar_hipotesis_z(v_z[1],v_z[2])
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
datosHipotesis <- DatosEncuesta$`Cuantos minutas demora filtrado`
mu_pob <- sum(datosHipotesis)/length(datosHipotesis)
muestra <-sample(datosHipotesis,33)
v_z <- hipotesis_test_norm(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
hipotesis_test_norm <- function(samp,poblat,sglvl=0.05){
x_bar <- mean(samp)
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
x_pob
z <- (x_bar-x_pob)/((sd_samp)/(sqrt(n)))
z_crit <- qnorm(sglvl/2)
p_valor <- 2 * (1 - pnorm(abs(z_crit)))
cat("Z value: ",z,"\n")
cat("Z crit: ",z_crit,"\n")
cat("p valor: ",p_valor,"\n")
return(c(z,z_crit))
}
v_z <- hipotesis_test_norm(muestra,datosHipotesis,0.05)
hipotesis_test_norm <- function(samp,poblat,sglvl=0.05){
x_bar <- mean(samp)
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
print(x_pob)
z <- (x_bar-x_pob)/((sd_samp)/(sqrt(n)))
z_crit <- qnorm(sglvl/2)
p_valor <- 2 * (1 - pnorm(abs(z_crit)))
cat("Z value: ",z,"\n")
cat("Z crit: ",z_crit,"\n")
cat("p valor: ",p_valor,"\n")
return(c(z,z_crit))
}
v_z <- hipotesis_test_norm(muestra,datosHipotesis,0.05)
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
hipotesis_test_norm <- function(samp,poblat,sglvl=0.05){
x_bar <- mean(samp)
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
cat("Media Poblacional: ",x_pob,"\n")
cat("Media Muestral: ",x_bar,"\n")
cat("desviacion Muestral: ",sd_samp,"\n")
z <- (x_bar-x_pob)/((sd_samp)/(sqrt(n)))
z_crit <- qnorm(sglvl/2)
p_valor <- 2 * (1 - pnorm(abs(z_crit)))
cat("Z value: ",z,"\n")
cat("Z crit: ",z_crit,"\n")
cat("p valor: ",p_valor,"\n")
return(c(z,z_crit))
}
v_z <- hipotesis_test_norm(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
hipotesis_test_norm <- function(samp,poblat,sglvl=0.05){
x_bar <- mean(samp)
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
cat("Media Poblacional: ",x_pob,"\n")
cat("Media Muestral: ",x_bar,"\n")
cat("desviacion Muestral: ",sd_samp,"\n")
z <- (x_bar-x_pob)/((sd_samp)/(sqrt(n)))
z_crit <- qnorm(sglvl/2)
p_valor <- 2 * (1 - pnorm(abs(z)))
cat("Z value: ",z,"\n")
cat("Z crit: ",z_crit,"\n")
cat("p valor: ",p_valor,"\n")
return(c(z,z_crit))
}
v_z <- hipotesis_test_norm(muestra,datosHipotesis,0.05)
verificar_hipotesis_z(v_z[1],v_z[2])
# Prueba De Hipotesis Distribucion t-student
hipotesis_test_t <- function(samp, poblat, sglvl = 0.05) {
x_bar <- mean(samp)
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
t <- (x_bar - x_pob) / (sd_samp / sqrt(n))
gl <- n - 1
t_crit <- qt(1 - sglvl / 2, df = gl)
p_valor <- 2 * (1 - pt(abs(t), df = gl))
cat("t value: ", round(t, 4), "\n")
cat("t crítico (bilateral, gl =", gl, "): ", round(t_crit, 4), "\n")
cat("p-valor:", round(p_valor, 4), "\n")
return(c(t, t_crit, gl))
}
verificar_hipotesis_t <- function(t, t_crit, gl, alpha = 0.05) {
par(mfrow = c(1, 1))
decision <- if (abs(t) > abs(t_crit)) "rechazada" else "no rechazada"
cat("Estadístico t:", round(t, 3), "\n")
cat("Valor crítico t:", round(t_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
x_vals <- seq(-4, 4, length.out = 500)
y_vals <- dt(x_vals, df = gl)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = paste0("Distribución t-Student (gl = ", gl, ")"),
ylab = "Densidad", xlab = "t")
abline(v = c(-t_crit, t_crit), col = "blue", lty = 2)
abline(v = t, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (t > 0) x_vals >= t_crit else x_vals <= -t_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright",
legend = c("t observado", "t crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
# Prueba De Hipotesis Distribucion t-student
hipotesis_test_t <- function(samp, poblat, sglvl = 0.05) {
x_bar <- mean(samp)
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
t <- (x_bar - x_pob) / (sd_samp / sqrt(n))
gl <- n - 1
t_crit <- qt(1 - sglvl / 2, df = gl)
p_valor <- 2 * (1 - pt(abs(t), df = gl))
cat("t value: ", round(t, 4), "\n")
cat("t crítico (bilateral, gl =", gl, "): ", round(t_crit, 4), "\n")
cat("p-valor:", round(p_valor, 4), "\n")
return(c(t, t_crit, gl))
}
verificar_hipotesis_t <- function(t, t_crit, gl, alpha = 0.05) {
par(mfrow = c(1, 1))
decision <- if (abs(t) > abs(t_crit)) "rechazada" else "no rechazada"
cat("Estadístico t:", round(t, 3), "\n")
cat("Valor crítico t:", round(t_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
x_vals <- seq(-4, 4, length.out = 500)
y_vals <- dt(x_vals, df = gl)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = paste0("Distribución t-Student (gl = ", gl, ")"),
ylab = "Densidad", xlab = "t")
abline(v = c(-t_crit, t_crit), col = "blue", lty = 2)
abline(v = t, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (t > 0) x_vals >= t_crit else x_vals <= -t_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright",
legend = c("t observado", "t crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
muestrat <-sample(datosHipotesis,20)
v_t <- hipotesis_test_t(muestrat,datosHipotesis)
verificar_hipotesis_t(v_t[1],v_t[2],v_t[3])
muestrat <-sample(datosHipotesis,20)
v_t <- hipotesis_test_t(muestrat,datosHipotesis)
verificar_hipotesis_t(v_t[1],v_t[2],v_t[3])
muestrat <-sample(datosHipotesis,20)
v_t <- hipotesis_test_t(muestrat,datosHipotesis)
verificar_hipotesis_t(v_t[1],v_t[2],v_t[3])
muestrat <-sample(datosHipotesis,20)
v_t <- hipotesis_test_t(muestrat,datosHipotesis)
verificar_hipotesis_t(v_t[1],v_t[2],v_t[3])
# Prueba De Hipotesis Distribucion t-student
hipotesis_test_t <- function(samp, poblat, sglvl = 0.05) {
x_bar <- mean(samp)
cat("Media Muestral: ",x_bar,"\n")
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
t <- (x_bar - x_pob) / (sd_samp / sqrt(n))
gl <- n - 1
t_crit <- qt(1 - sglvl / 2, df = gl)
p_valor <- 2 * (1 - pt(abs(t), df = gl))
cat("t value: ", round(t, 4), "\n")
cat("t crítico (bilateral, gl =", gl, "): ", round(t_crit, 4), "\n")
cat("p-valor:", round(p_valor, 4), "\n")
return(c(t, t_crit, gl))
}
# Prueba De Hipotesis Distribucion t-student
hipotesis_test_t <- function(samp, poblat, sglvl = 0.05) {
x_bar <- mean(samp)
cat("Media Muestral: ",x_bar,"\n")
sd_samp <- sd(samp)
n <- length(samp)
x_pob <- mean(poblat)
t <- (x_bar - x_pob) / (sd_samp / sqrt(n))
gl <- n - 1
t_crit <- qt(1 - sglvl / 2, df = gl)
p_valor <- 2 * (1 - pt(abs(t), df = gl))
cat("t value: ", round(t, 4), "\n")
cat("t crítico (bilateral, gl =", gl, "): ", round(t_crit, 4), "\n")
cat("p-valor:", round(p_valor, 4), "\n")
return(c(t, t_crit, gl))
}
verificar_hipotesis_t <- function(t, t_crit, gl, alpha = 0.05) {
par(mfrow = c(1, 1))
decision <- if (abs(t) > abs(t_crit)) "rechazada" else "no rechazada"
cat("Estadístico t:", round(t, 3), "\n")
cat("Valor crítico t:", round(t_crit, 3), "\n")
cat("Decisión: Hipótesis nula", decision, "\n\n")
x_vals <- seq(-4, 4, length.out = 500)
y_vals <- dt(x_vals, df = gl)
plot(x_vals, y_vals, type = "l", lwd = 2, col = "black",
main = paste0("Distribución t-Student (gl = ", gl, ")"),
ylab = "Densidad", xlab = "t")
abline(v = c(-t_crit, t_crit), col = "blue", lty = 2)
abline(v = t, col = "red", lwd = 2)
# Sombrear áreas críticas
critical_region <- if (t > 0) x_vals >= t_crit else x_vals <= -t_crit
polygon(c(x_vals[critical_region], rev(x_vals[critical_region])),
c(y_vals[critical_region], rep(0, sum(critical_region))),
col = "red", border = NA, density = 50)
legend("topright",
legend = c("t observado", "t crítico", "Área crítica"),
col = c("red", "blue", "red"), lty = c(1, 2, NA), pch = c(NA, NA, 15))
}
muestrat <-sample(datosHipotesis,20)
v_t <- hipotesis_test_t(muestrat,datosHipotesis)
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
pt(0.712,df=19)
source("E:/Estudios/Estadistica Y Probabilidad/AnalisisDatosFase2/Fase2.R")
2*(1-pt(0.712,df=19))
sd_pob <- sd(datosHipotesis)
sd_pob
qnorm(0.489)
pnorm(0.489)
qnorm(0.489)
pnorm(0.489)
pnorm(0.489/2)
pnorm(0.489/2)
0.5-pnorm(0.489)
